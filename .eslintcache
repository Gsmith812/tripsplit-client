[{"/Users/DarrenGanttMacbook/projects/tripsplit-client/src/index.js":"1","/Users/DarrenGanttMacbook/projects/tripsplit-client/src/App.js":"2","/Users/DarrenGanttMacbook/projects/tripsplit-client/src/context/TripSplitContext.js":"3","/Users/DarrenGanttMacbook/projects/tripsplit-client/src/views/LandingPage/LandingPage.js":"4","/Users/DarrenGanttMacbook/projects/tripsplit-client/src/views/Dashboard/Dashboard.js":"5"},{"size":262,"mtime":1611461928610,"results":"6","hashOfConfig":"7"},{"size":1127,"mtime":1612223252466,"results":"8","hashOfConfig":"7"},{"size":269,"mtime":1611860766059,"results":"9","hashOfConfig":"7"},{"size":1475,"mtime":1612223055447,"results":"10","hashOfConfig":"7"},{"size":2555,"mtime":1613080975377,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1iqp2m6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/DarrenGanttMacbook/projects/tripsplit-client/src/index.js",[],["25","26"],"/Users/DarrenGanttMacbook/projects/tripsplit-client/src/App.js",["27","28"],"import './App.css';\nimport LandingPage from './views/LandingPage/LandingPage';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from './views/Dashboard/Dashboard';\nimport { useState } from 'react';\nimport TripSplitContext from './context/TripSplitContext';\n\nfunction App() {\n\n  const [show, setShow] = useState(false);\n  const [modal, setModal] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n  }\n\n  const handleModals = modal => {\n    setModal(modal);\n    showModal();\n}\n\n  const contextValue = {\n    show,\n    setShow,\n    showModal,\n    hideModal,\n    handleModals,\n    modal,\n    setModal\n  }\n\n  return (\n    <main className=\"App\">\n      <TripSplitContext.Provider value={contextValue}>\n        <Switch>\n          <Route\n            exact path='/'\n            component={LandingPage}\n          />\n          <Route\n            path='/dashboard'\n            component={Dashboard}\n          />\n        </Switch>\n      </TripSplitContext.Provider>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/DarrenGanttMacbook/projects/tripsplit-client/src/context/TripSplitContext.js",[],"/Users/DarrenGanttMacbook/projects/tripsplit-client/src/views/LandingPage/LandingPage.js",[],"/Users/DarrenGanttMacbook/projects/tripsplit-client/src/views/Dashboard/Dashboard.js",["29"],"import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from '../../components/NavBar/NavBar';\nimport './Dashboard.css';\nimport TripSplitContext from '../../context/TripSplitContext';\nimport Modal from '../../components/Modal/Modal';\nimport AddFriend from '../../components/AddFriend/AddFriend';\nimport NewTrip from '../../components/NewTrip/NewTrip';\nimport STORE from '../../dummy-store';\n\nconst Dashboard = props => {\n\n    const { show, hideModal, modal, handleModals } = useContext(TripSplitContext);\n\n    const { trips, friends } = STORE;\n\n    return (\n        <section className='Dashboard'>\n            <NavBar />\n            <div className='top-container'>\n                <section className='greeting'>\n                    <h2>Hello, Guest</h2>\n                </section>\n                <section className='friends-list'>\n                    <h3>Friend's List:</h3>\n                    <ul>\n                        {friends.map((friend, i) => {\n                            return (\n                                <li key={i}>{friend}</li>\n                            )\n                        })}\n                    </ul>\n                    <button onClick={() => handleModals('addFriend')}>Add Friend</button>\n                </section>\n            </div>\n            <section className='trips-list'>\n                <h3>Upcoming Trips</h3>\n                <div className='trips-container'>\n                        {trips.map((trip, i) => {\n                            return (\n                                <div className='trip-item' key={i}>\n                                    <Link to={`/trips/${trip.id}`}>\n                                        <h4>{trip.tripName}</h4>\n                                        <p>Total Amount: {trip.totalAmount.toLocaleString('en-US', {style: 'currency', currency: 'USD'})}</p>\n                                        <p>Trip starts on {trip.tripStartDate}</p>\n                                        <span className='countdown-timer'>Countdown to Vacation here</span>\n                                    </Link>\n                                </div>\n                            )\n                        })}\n                </div>\n                <button className='new-trip' onClick={() => handleModals('newTrip')}>New Trip +</button>\n                <Modal show={show} handleClose={hideModal}>\n                    {modal === 'newTrip' && <NewTrip />}\n                </Modal>\n            </section>\n        </section>\n    )\n}\n\nexport default Dashboard;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":12,"column":10,"nodeType":"36","messageId":"37","endLine":12,"endColumn":19},{"ruleId":"34","severity":1,"message":"38","line":12,"column":21,"nodeType":"36","messageId":"37","endLine":12,"endColumn":33},{"ruleId":"34","severity":1,"message":"39","line":7,"column":8,"nodeType":"36","messageId":"37","endLine":7,"endColumn":17},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'setIsLoading' is assigned a value but never used.","'AddFriend' is defined but never used.","no-global-assign","no-unsafe-negation"]